#!/usr/bin/env node
'use strict';
const yargs = require('yargs/yargs');
const { hideBin } = require('yargs/helpers');
const sizes = require('./sizes.js');

yargs(hideBin(process.argv))
    .command(
        'analyse [url_input_file] [report_output_file]',
        'Run the analysis',
        (yargs) => {
            yargs
                .positional('url_input_file', {
                    describe: 'YAML file path listing all URL',
                    default: 'url.yaml',
                })
                .positional('report_output_file', {
                    describe: 'Report output file path',
                    default: 'results.xlsx',
                })
                .option('grafana_link', {
                    description: 'Grafana link to display in HTML report when using influxdbhtml format',
                    type: 'string',
                    default: '',
                })
                .option('device', {
                    alias: 'd',
                    description: 'Hardware to simulate',
                    choices: Object.keys(sizes),
                    default: 'desktop',
                })
                .option('format', {
                    alias: 'f',
                    type: 'string',
                    description: 'Report format : Possible choices : xlsx (excel), html, influxdb',
                })
                .option('headers', {
                    alias: 'h',
                    type: 'string',
                    description: 'Headers HTTP to configure to analyze url',
                })
                .option('headless', {
                    type: 'boolean',
                    description: 'Option to enable or disable web browser headless mode',
                    default: true,
                })
                .option('influxdb_bucket', {
                    type: 'string',
                })
                .option('influxdb_hostname', {
                    type: 'string',
                })

                .option('influxdb_org', {
                    type: 'string',
                })
                .option('influxdb_token', {
                    type: 'string',
                })
                .option('login', {
                    type: 'string',
                    alias: 'l',
                    description: 'Path to YAML file with login informations',
                })
                .option('max_tab', {
                    type: 'number',
                    description: 'Number of concurrent analysis',
                    default: 40,
                })
                .option('mobile', {
                    type: 'boolean',
                    description: 'Connection type : mobile or wired',
                    default: false,
                })
                .option('proxy', {
                    alias: 'p',
                    type: 'string',
                    description: 'Path to YAML file with proxy configuration to apply in Chromium',
                })
                .option('retry', {
                    alias: 'r',
                    type: 'number',
                    description: 'Number of retry when an analysis of a URL fail',
                    default: 2,
                })
                .option('timeout', {
                    alias: 't',
                    type: 'number',
                    description: 'Timeout for an analysis of a URL in ms',
                    default: 180000,
                })
                .option('worst_pages', {
                    type: 'number',
                    description: 'Number of displayed worst pages',
                    default: 5,
                })
                .option('worst_rules', {
                    type: 'number',
                    description: 'Number of displayed worst rules',
                    default: 5,
                });
        },
        (argv) => {
            require('./commands/analyse.js')(argv);
        }
    )
    .command(
        'parseSitemap <sitemap_url> [yaml_output_file]',
        'Parse sitemap to a YAML file',
        (yargs) => {
            yargs
                .positional('sitemap_url', {
                    describe: 'URL to the sitemap.xml file',
                })
                .positional('yaml_output_file', {
                    describe: 'Output file path',
                    default: 'url.yaml',
                });
        },
        (argv) => {
            require('./commands/sitemapParser.js')(argv);
        }
    )
    .option('ci', {
        type: 'boolean',
        description: 'Disable progress bar to work with GitLab CI',
    })
    .strict()
    .demandCommand()
    .help().argv;
